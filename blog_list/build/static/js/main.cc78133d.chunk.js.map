{"version":3,"sources":["services/blogs.js","components/Blog.js","components/Notification.js","components/User.js","components/Users.js","services/login.js","components/BlogForm.js","components/Togglable.js","reducers/notificationReducer.js","reducers/blogsReducer.js","reducers/signedUserReducer.js","services/users.js","reducers/usersReducer.js","App.js","index.js"],"names":["baseUrl","token","deleteBlog","id","a","config","headers","Authorization","axios","delete","update","newObject","put","response","data","getAll","get","then","setToken","newToken","create","post","Blog","blog","useState","showAll","setShowAll","likes","likesState","setLikesState","blogDeleted","setBlogDeleted","showRemove","useSelector","state","signedUser","username","user","blogStyle","paddingTop","paddingLeft","paddingBottom","border","borderWidth","marginBottom","marginTop","window","confirm","title","author","blogService","like","url","style","className","Button","variant","onClick","Notification","notification","text","Alert","reason","User","name","blogs","map","Users","users","match","useRouteMatch","userParams","find","u","params","undefined","path","Table","striped","to","length","login","credentials","BlogForm","props","setTitle","setAuthor","setUrl","handleCreate","event","preventDefault","addBlog","Form","onSubmit","Group","Label","Control","type","value","onChange","target","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","varinat","buttonLabel","children","displayName","showMessage","message","notificationReducer","action","newBlog","dispatch","setTimeout","error","blogsReducer","signUser","signedUserReducer","getUsers","console","log","usersReducer","App","useDispatch","setUsername","password","setPassword","blogFormRef","useRef","useEffect","usersService","loggedUserJSON","localStorage","getItem","userX","JSON","parse","padding","color","handleLogin","loginService","setItem","stringify","handleLogOut","clear","blogObject","current","Navbar","collapseOnSelect","expand","bg","Container","Toggle","aria-controls","Collapse","Nav","Link","href","as","Row","sort","first","second","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc78133d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  await axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n\r\n\r\n}\r\n\r\nexport default { getAll, setToken, create, update, deleteBlog }","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport blogService from '../services/blogs'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Blog = ({ blog }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n  const [likesState, setLikesState] = useState(blog.likes)\r\n  const [blogDeleted, setBlogDeleted] = useState(false)\r\n\r\n  let showRemove =\r\n    useSelector((state) => state.signedUser).username === blog.user.username\r\n\r\n  const blogStyle = {\r\n    paddingTop: 4,\r\n    paddingLeft: 3,\r\n    paddingBottom: 4,\r\n    border: 'solid',\r\n    borderWidth: 2,\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n  }\r\n  const buttonStyle = {\r\n    color: 'white',\r\n    backgroundColor: 'blue',\r\n  }\r\n  const deleteBlog = async () => {\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\r\n      await blogService.deleteBlog(blog.id)\r\n      setBlogDeleted(true)\r\n    }\r\n  }\r\n\r\n  const removeButton = () => (\r\n    <Button variant='danger' onClick={deleteBlog}>\r\n      remove\r\n    </Button>\r\n  )\r\n\r\n  const like = async () => {\r\n    await blogService.update(blog.id, {\r\n      user: blog.user.id,\r\n      likes: likesState + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url,\r\n    })\r\n    setLikesState(likesState + 1)\r\n  }\r\n  if (blogDeleted) return <div>deleted.</div>\r\n  if (showAll)\r\n    return (\r\n      <div style={blogStyle} className='block-example border border-dark'>\r\n        <div>\r\n          <strong>Title:</strong> {blog.title}\r\n          <Button variant='info' onClick={() => setShowAll(!showAll)}>\r\n            {showAll ? 'hide' : 'view'}\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <strong>Link:</strong> {blog.url}\r\n        </div>\r\n        <div>\r\n          <strong>Likes:</strong> {likesState}{' '}\r\n          <Button variant='dark' onClick={like}>\r\n            like\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <strong>Author name:</strong> {blog.author}\r\n        </div>\r\n        {<div>{showRemove === true && removeButton()}</div>}\r\n      </div>\r\n    )\r\n  else\r\n    return (\r\n      <div style={blogStyle} className='block-example border border-dark'>\r\n        <div>\r\n          {blog.title} -{blog.author}\r\n          <Button variant='info' onClick={() => setShowAll(!showAll)}>\r\n            {showAll ? 'hide' : 'view'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import { useSelector } from 'react-redux'\r\nimport React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  if (useSelector(state => state) === '') return <div></div>\r\n  return (\r\n    <div>\r\n      {(notification.text &&\r\n        <Alert variant={notification.reason}>\r\n          {notification.text}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\n\r\nconst User = ({ user }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h4>added blogs</h4>\r\n      <ul>\r\n        {user.blogs.map(blog => <li key={blog.id}>{blog.title}</li>)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Table } from 'react-bootstrap'\r\nimport User from '../components/User'\r\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom'\r\n\r\nconst Users = () => {\r\n  const users = useSelector((state) => state.users)\r\n  const match = useRouteMatch('/users/:id')\r\n  const userParams = match\r\n    ? users.find((u) => u.id === match.params.id)\r\n    : undefined\r\n  return (\r\n    <Switch>\r\n      <Route path='/users/:userId'>\r\n        {userParams === undefined && <div>there is no user with this id</div>}\r\n        {userParams !== undefined && <User user={userParams} />}\r\n      </Route>\r\n      <Route path='/users'>\r\n        <div>\r\n          <h3>Users</h3>\r\n          <Table striped>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td>\r\n                  <strong>blogs created</strong>\r\n                </td>\r\n              </tr>\r\n              {users.map((user) => (\r\n                <tr key={user.username}>\r\n                  <td>\r\n                    <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n                  </td>\r\n                  <td> {user.blogs.length}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nconst BlogForm = (props) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleCreate = async (event) => {\r\n    event.preventDefault()\r\n    await props.addBlog({ title, author, url })\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Create New</h2>\r\n      <Form onSubmit={handleCreate}>\r\n        <Form.Group>\r\n          <div>\r\n            <Form.Label>title:</Form.Label>\r\n            <Form.Control type=\"text\" value={title} name=\"title\"\r\n              onChange={({ target }) => setTitle(target.value)}\r\n            />\r\n          </div>\r\n          <div><Form.Label>author:</Form.Label>\r\n            <Form.Control type=\"text\" value={author} name=\"author\"\r\n              onChange={({ target }) => setAuthor(target.value)}\r\n            />\r\n          </div>\r\n          <div><Form.Label>url:</Form.Label>\r\n            <Form.Control type=\"text\" value={url} name=\"url\"\r\n              onChange={({ target }) => setUrl(target.value)}\r\n            />\r\n          </div>\r\n          <Button variant='primary' type=\"submit\">create </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\nconst Togglable = React.forwardRef ((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button varinat='primary' onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button variant='secondary' onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n)\r\n\r\nTogglable.displayName= 'Togglable'\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\nexport default Togglable","const notificationReducer = (state = '', action) => {\r\n\r\n  if (action.type === 'SHOW') return action.data\r\n  if (action.type === 'HIDE') return ''\r\n  return state\r\n}\r\n\r\nexport const showMessage = (message) => {\r\n  return {\r\n    type: 'SHOW',\r\n    data: message\r\n  }\r\n}\r\n\r\nexport const removeMessage = () => {\r\n  return {\r\n    type: 'HIDE'\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import blogService from '../services/blogs'\r\nimport { showMessage, removeMessage } from './notificationReducer'\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n  if (action.type === 'INIT_BLOGS') return action.data\r\n  if (action.type === 'NEW_BLOG') return [...state, action.data]\r\n  return state\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const newBlog = (newBlog) => {\r\n\r\n  return async dispatch => {\r\n    try {\r\n      const blog = await blogService.create(newBlog)\r\n      dispatch({\r\n        type: 'NEW_BLOG',\r\n        data: blog\r\n      })\r\n      dispatch(showMessage({ text: `a new blog ${blog.title} by ${blog.author} added`, reason: 'success' }))\r\n      setTimeout(() => {\r\n        dispatch(removeMessage())\r\n      }, 5000)\r\n    }\r\n    catch (error) {\r\n      dispatch(showMessage({ text: `${error.response.data.error}`, reason: 'danger' }))\r\n      setTimeout(() => {\r\n        dispatch(removeMessage())\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default blogsReducer","\r\nconst signedUserReducer = (state = null, action) => {\r\n  if (action.type === 'LOG_IN') return action.data\r\n  if (action.type === 'LOG_OUT') return null\r\n  return state\r\n}\r\n\r\nexport const signUser = (user) => {\r\n  return {\r\n    type: 'LOG_IN',\r\n    data: user\r\n  }\r\n}\r\n\r\nexport const unSignUser = () => {\r\n  return {\r\n    type: 'LOG_OUT',\r\n  }\r\n}\r\n\r\nexport default signedUserReducer","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { getUsers }","import usersService from '../services/users'\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  if (action.type==='INIT_USERS') return action.data\r\n  return state\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await usersService.getUsers()\r\n    dispatch ({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport Users from './components/Users'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport { Form, Row } from 'react-bootstrap'\r\nimport { Button, Nav, Navbar, Container } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showMessage, removeMessage } from './reducers/notificationReducer'\r\nimport { initializeBlogs, newBlog } from './reducers/blogsReducer'\r\nimport { signUser, unSignUser } from './reducers/signedUserReducer'\r\nimport { initializeUsers } from './reducers/usersReducer'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const blogs = useSelector((state) => state.blogs)\r\n  const user = useSelector((state) => state.signedUser)\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUsers())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const userX = JSON.parse(loggedUserJSON)\r\n      blogService.setToken(userX.token)\r\n      dispatch(signUser(userX))\r\n    }\r\n  }, [])\r\n\r\n  const padding = {\r\n    color: 'white',\r\n    padding: 5,\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const userX = await loginService.login({ username, password })\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(userX))\r\n      blogService.setToken(userX.token)\r\n      dispatch(signUser(userX))\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      dispatch(\r\n        showMessage({ text: 'wrong username or password', reason: 'danger' })\r\n      )\r\n      setTimeout(() => {\r\n        dispatch(removeMessage())\r\n      }, 5000)\r\n    }\r\n  }\r\n  const handleLogOut = () => {\r\n    window.localStorage.clear()\r\n    dispatch(unSignUser())\r\n  }\r\n  const addBlog = async (blogObject) => {\r\n    dispatch(newBlog(blogObject))\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const loggedBlogs = () => {\r\n    const padding = {\r\n      paddingTop: 10,\r\n    }\r\n    return (\r\n      <div style={padding}>\r\n        <Togglable buttonLabel='create blog' ref={blogFormRef}>\r\n          <BlogForm addBlog={addBlog} />\r\n        </Togglable>\r\n\r\n        {blogs\r\n          .sort((first, second) => second.likes - first.likes)\r\n          .map((blog) => (\r\n            <Blog key={blog.id} blog={blog} />\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n  const logged = () => {\r\n    const padding = {\r\n      paddingBottom: 10,\r\n    }\r\n    return (\r\n      <div style={padding}>\r\n        <div>{user.name} logged in </div>\r\n        <div>\r\n          <Button variant='danger' onClick={handleLogOut}>\r\n            {' '}\r\n            log out{' '}\r\n          </Button>{' '}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  const loginForm = () => (\r\n    <div>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Group>\r\n          <div>\r\n            <Form.Label>username:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              name='username'\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Label>password:</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              name='Password'\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n          </div>\r\n          <Button variant='primary' type='submit'>\r\n            login\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <Row>\r\n        <div>you can use either of these accounts to login</div>\r\n      </Row>\r\n      <Row>\r\n        <div>username: malek</div>\r\n        <div>password: malek123</div>\r\n      </Row>\r\n      <br />\r\n      <Row>\r\n        <div>username: abdallah</div>\r\n        <div>password: aabdou123</div>\r\n      </Row>\r\n    </div>\r\n  )\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar collapseOnSelect expand='lg' bg='dark' variant='light'>\r\n          <Container>\r\n            <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n            <Navbar.Collapse id='responsive-navbar-nav'>\r\n              <Nav className='mr-auto'>\r\n                <Nav.Link href='#' as='span'>\r\n                  <Link style={padding} to='/'>\r\n                    home\r\n                  </Link>\r\n                </Nav.Link>\r\n                <Nav.Link href='#' as='span'>\r\n                  <Link style={padding} to='/users'>\r\n                    users\r\n                  </Link>\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n      <Container className='py-3'>\r\n        <h2>blogs</h2>\r\n        {user !== null && logged()}\r\n        <Notification />\r\n        {user === null && loginForm()}\r\n        <Switch>\r\n          <Route path='/users'>{user !== null && <Users />}</Route>\r\n          <Route path='/'>{user !== null && loggedBlogs()}</Route>\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport signedUserReducer from './reducers/signedUserReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\nimport './bootstrap.min.css'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blogs: blogsReducer,\r\n  signedUser: signedUserReducer,\r\n  users: usersReducer,\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}